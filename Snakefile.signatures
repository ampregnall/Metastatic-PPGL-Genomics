configfile: "config.yaml"

rule all:    
    input: 
        FFPESigCorrected = "results/mutational_signatures/SigProfilerExtractor_FFPESigCorrected/SBS96/SBS96_selection_plot.pdf",
        FFPESigUncorrected = "results/mutational_signatures/SigProfilerExtractor/SBS96/SBS96_selection_plot.pdf",

rule FFPESig_mutational_signature_extraction:
    input: "data/processed/snvs/mutational_signatures/MetastaticPPGL.SBS96.FFPESigCorrected.csv",
    params:
        direct="results/mutational_signatures/SigProfilerExtractor_FFPESigCorrected"
    output: "results/mutational_signatures/SigProfilerExtractor_FFPESigCorrected/SBS96/SBS96_selection_plot.pdf"
    threads: 8
    shell: "python src/somatic_variant_analysis/mutational_signature_extraction.py -i={input} "
        "-o={params.direct} -g=GrCh38 -t={threads}"

rule mutational_signature_extraction:
    input: "data/processed/snvs/mutational_signatures/MetastaticPPGL.SBS96.csv",
    params:
        direct="results/mutational_signatures/SigProfilerExtractor"
    output: "results/mutational_signatures/SigProfilerExtractor/SBS96/SBS96_selection_plot.pdf"
    threads: 8
    shell: "python src/somatic_variant_analysis/mutational_signature_extraction.py -i={input} "
        "-o={params.direct} -g=GrCh38 -t={threads}"

rule combine_FFPESig_output:
    input:
        flag=expand("data/processed/snvs/mutational_signatures/FFPESig/{sample}_corrected_profile.csv", sample=config["samples"]),
        folder="data/processed/snvs/mutational_signatures/FFPESig",
        rownames="metadata/SBS96-Channels.csv"  
    output:
        "data/processed/snvs/mutational_signatures/MetastaticPPGL.SBS96.FFPESigCorrected.csv"
    shell: "python src/somatic_variant_analysis/combine_FFPEsig_output.py {input.folder} {input.rownames} {output}"

rule run_FFPESig:
    input: "data/processed/snvs/mutational_signatures/MetastaticPPGL.SBS96.csv"
    params:
        folder = "data/processed/snvs/mutational_signatures/FFPESig"
    output: "data/processed/snvs/mutational_signatures/FFPESig/{sample}_corrected_profile.csv"
    run:
        if wildcards.sample == "PP245-DZ2A": # Mutational burden is too low for FFPESig
            shell("python src/somatic_variant_analysis/handle_FFPESig_exceptions.py {input} {output} {wildcards.sample}")
        else:
            shell("python src/somatic_variant_analysis/FFPESig.py --input={input} --sample={wildcards.sample} --label=Unrepaired --output={params.folder}")

rule generate_SNV_catalog:
    input: 
        data = "data/processed/snvs/drivers/PPGL.somatic.data.combined.filtered.txt",
        rownames = "metadata/SBS96-Channels.csv"
    output: "data/processed/snvs/mutational_signatures/MetastaticPPGL.SBS96.csv"
    shell: "Rscript src/somatic_variant_analysis/generate_SBS96_catalog.R --input={input.data} --output={output} --rownames={input.rownames}"
